1. FetchType.LAZY 설정 안했을 경우, QUERY 비교
  -> clear 주의 : EntityManager.clear를 하지 않으면 영속컨텍스트에 있는 order캐시를 가져오기 때문에 query문을 날리지 않느다.
  -> order의 item만 조회하고 싶은데 user테이블과 join을 한다. 필요없는 리소스가 소비된다.
2. mappedBy 했을 때 vs 안했을때
  -> 누가 주인 역할인지 정해주지 않으면, 첫 실행에서는 h2 database에 테이블이 잘 생기지만 이후 재실행했을때 어떤 테이블을 먼저 drop 해야하는지 판단하지 못하여 warn 발생한다.
  -> 주인 역할 order 를 persist 하기 전, userC를 persist하지 않으면 ERROR 발생. (object references an unsaved transient instance - save the transient instance before flushing : hellojpa.order.entity.Orders.user -> hellojpa.order.entity.User)
   #예외발생 : Exception in thread "main" java.lang.StackOverflowError
           예외발생 로그를 확인했을 때, ' at hellojpa.order.entity.User$HibernateProxy$WHkj2SRh.toString(Unknown Source) ' 이런 내용이 있다
3. ManyToMany 에서 Item을 add 했을 때
4. em.flush 이후에 persist에 넣었던 객체를 조회하면 어떻게 될까?
  -> flush로 db에 query를 날렸다고 해서 데이터가 들어가지는 않는다. / transaction.commit을 해줘야 실제 반영